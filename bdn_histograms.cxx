#define _bdn_histograms_cxx "bdn_histograms.cxx"
#include "bdn_histograms.h"

void book_histograms()
{
// TDC Singles
ht_B_dEa		= new TH1I("ht_B_dEa"	,"Singles TDC data for Bottom Delta-E_a (ns)"	,tBins,tMin,tMax);
ht_B_dEb		= new TH1I("ht_B_dEb"	,"Singles TDC data for Bottom Delta-E_b (ns)"	,tBins,tMin,tMax);
ht_B_E			= new TH1I("ht_B_E"		,"Singles TDC data for Bottom E (ns)"			,tBins,tMin,tMax);
ht_L_dEa		= new TH1I("ht_L_dEa"	,"Singles TDC data for Left Delta-E_a (ns)"		,tBins,tMin,tMax);
ht_L_dEb		= new TH1I("ht_L_dEb"	,"Singles TDC data for Left Delta-E_b (ns)"		,tBins,tMin,tMax);
ht_L_E			= new TH1I("ht_L_E"		,"Singles TDC data for Left E (ns)"				,tBins,tMin,tMax);
ht_R_mcp		= new TH1I("ht_R_mcp"	,"Singles TDC data for Right MCP (ns)"			,tBins,tMin,tMax);
ht_R_ge			= new TH1I("ht_R_ge"	,"Singles TDC data for Right HPGe (ns)"			,tBins,tMin,tMax);
ht_T_mcp		= new TH1I("ht_T_mcp"	,"Singles TDC data for Top MCP (ns)"			,tBins,tMin,tMax);
ht_T_ge			= new TH1I("ht_T_ge"	,"Singles TDC data for Top HPGe (ns)"			,tBins,tMin,tMax);
ht_rf			= new TH1I("ht_rf"		,"Singles TDC data for RF cycle (ns)"			,tBins,tMin,tMax);
// Plastic timings
ht_B_dE			= new TH1I("ht_B_dE"	,"TDC: (dEa+dEb)/2 for Bottom plastic (ns)"	,2*tBins,tMin,tMax);
ht_L_dE			= new TH1I("ht_L_dE"	,"TDC: (dEa+dEb)/2 for Left plastic (ns)"	,2*tBins,tMin,tMax);
ht_B_dEdiff		= new TH1I("ht_B_dEdiff","TDC: (dEa-dEb) for Bottom plastic (ns)"	,tBins,tMin,tMax);
ht_L_dEdiff		= new TH1I("ht_L_dEdiff","TDC: (dEa-dEb) for Left plastic (ns)"		,tBins,tMin,tMax);
ht_B_dE_E		= new TH1I("ht_B_dE_E"	,"TDC: (E-(dEa+dEb)/2) for Bottom plastic (ns)"	,2*tBins,tMin,tMax);
ht_L_dE_E		= new TH1I("ht_L_dE_E"	,"TDC: (E-(dEa+dEb)/2) for Left plastic (ns)"	,2*tBins,tMin,tMax);
ht_B_dEmin		= new TH1I("ht_B_dEmin"	,"Singles TDC data for min(dEa,dEb) of Bottom plastic (ns)"		,tBins,tMin,tMax);
ht_L_dEmin		= new TH1I("ht_L_dEmin"	,"Singles TDC data for min(dEa,dEb) of Left plastic (ns)"		,tBins,tMin,tMax);
// ADC Singles
//ha_bkgd_R_ge	= new TH1I("ha_bkgd_R_ge"	,"Singles ADC data for Right HPGe"			,aBins,aMin,aMax); // 2013-12-06: Now declared below
//ha_bkgd_T_ge	= new TH1I("ha_bkgd_T_ge"	,"Singles ADC data for Top HPGe"			,aBins,aMin,aMax);
ha_B_dEa		= new TH1I("ha_B_dEa"		,"Singles ADC data for Bottom Delta-E_a"	,aBins,aMin,aMax);
ha_B_dEb		= new TH1I("ha_B_dEb"		,"Singles ADC data for Bottom Delta-E_b"	,aBins,aMin,aMax);
ha_B_dEsum		= new TH1I("ha_B_dEsum"		,"Singles ADC data for Bottom dEa+dEb"		,2*aBins,2*aMin,2*aMax);
ha_B_E			= new TH1I("ha_B_E"			,"Singles ADC data for Bottom E"			,aBins,aMin,aMax);
ha_L_dEa		= new TH1I("ha_L_dEa"		,"Singles ADC data for Left Delta-E_a"		,aBins,aMin,aMax);
ha_L_dEb		= new TH1I("ha_L_dEb"		,"Singles ADC data for Left Delta-E_b"		,aBins,aMin,aMax);
ha_L_dEsum		= new TH1I("ha_L_dEsum"		,"Singles ADC data for Left dEa+dEb"		,2*aBins,2*aMin,2*aMax);
ha_L_E			= new TH1I("ha_L_E"			,"Singles ADC data for Left E"				,aBins,aMin,aMax);
ha_R_mcpA		= new TH1I("ha_R_mcpA"		,"Singles ADC data for Right MCP-A"			,aBins,aMin,aMax);
ha_R_mcpB		= new TH1I("ha_R_mcpB"		,"Singles ADC data for Right MCP-B"			,aBins,aMin,aMax);
ha_R_mcpC		= new TH1I("ha_R_mcpC"		,"Singles ADC data for Right MCP-C"			,aBins,aMin,aMax);
ha_R_mcpD		= new TH1I("ha_R_mcpD"		,"Singles ADC data for Right MCP-D"			,aBins,aMin,aMax);
ha_R_mcpE		= new TH1I("ha_R_mcpE"		,"Singles ADC data for Right MCP-E"			,aBins,aMin,aMax);
ha_R_mcpSum		= new TH1I("ha_R_mcpSum"	,"Singles ADC data for Right MCP-Sum"		,4*aBins,4*aMin,4*aMax);
ha_R_ge			= new TH1I("ha_R_ge"		,"Singles ADC data for Right HPGe"			,aBins,aMin,aMax);
ha_R_ge_highE	= new TH1I("ha_R_ge_highE"	,"Singles ADC data for Right HPGe Low-gain signal"	,aBins,aMin,aMax);
ha_T_mcpA		= new TH1I("ha_T_mcpA"		,"Singles ADC data for Top MCP-A"			,aBins,aMin,aMax);
ha_T_mcpB		= new TH1I("ha_T_mcpB"		,"Singles ADC data for Top MCP-B"			,aBins,aMin,aMax);
ha_T_mcpC		= new TH1I("ha_T_mcpC"		,"Singles ADC data for Top MCP-C"			,aBins,aMin,aMax);
ha_T_mcpD		= new TH1I("ha_T_mcpD"		,"Singles ADC data for Top MCP-D"			,aBins,aMin,aMax);
ha_T_mcpE		= new TH1I("ha_T_mcpE"		,"Singles ADC data for Top MCP-E"			,aBins,aMin,aMax);
ha_T_mcpSum		= new TH1I("ha_T_mcpSum"	,"Singles ADC data for Top MCP-Sum"			,4*aBins,4*aMin,4*aMax);
ha_T_ge			= new TH1I("ha_T_ge"		,"Singles ADC data for Top HPGe"			,aBins,aMin,aMax);
ha_T_ge_highE	= new TH1I("ha_T_ge_highE"	,"Singles ADC data for Top HPGe Low-gain signal"	,aBins,aMin,aMax);
// Corrected MCP post spectra
ha_R_mcpA_corr	= new TH1I("ha_R_mcpA_corr"		,"Corrected singles ADC data for Right MCP-A: Pedestal subtracted"		,5000,-500,4500);
ha_R_mcpB_corr	= new TH1I("ha_R_mcpB_corr"		,"Corrected singles ADC data for Right MCP-B: Pedestal subtracted"		,5000,-500,4500);
ha_R_mcpC_corr	= new TH1I("ha_R_mcpC_corr"		,"Corrected singles ADC data for Right MCP-C: Pedestal subtracted"		,5000,-500,4500);
ha_R_mcpD_corr	= new TH1I("ha_R_mcpD_corr"		,"Corrected singles ADC data for Right MCP-D: Pedestal subtracted"		,5000,-500,4500);
ha_R_mcpE_corr	= new TH1I("ha_R_mcpE_corr"		,"Corrected singles ADC data for Right MCP-E: Pedestal subtracted"		,5000,-500,4500);
ha_R_mcpSum_corr= new TH1I("ha_R_mcpSum_corr"	,"Corrected singles ADC data for Right MCP-Sum: Pedestal subtracted"	,4*5000,-4*500,4*4500);
ha_T_mcpA_corr	= new TH1I("ha_T_mcpA_corr"		,"Corrected singles ADC data for Top MCP-A: Pedestal subtracted"		,5000,-500,4500);
ha_T_mcpB_corr	= new TH1I("ha_T_mcpB_corr"		,"Corrected singles ADC data for Top MCP-B: Pedestal subtracted"		,5000,-500,4500);
ha_T_mcpC_corr	= new TH1I("ha_T_mcpC_corr"		,"Corrected singles ADC data for Top MCP-C: Pedestal subtracted"		,5000,-500,4500);
ha_T_mcpD_corr	= new TH1I("ha_T_mcpD_corr"		,"Corrected singles ADC data for Top MCP-D: Pedestal subtracted"		,5000,-500,4500);
ha_T_mcpE_corr	= new TH1I("ha_T_mcpE_corr"		,"Corrected singles ADC data for Top MCP-E: Pedestal subtracted"		,5000,-500,4500);
ha_T_mcpSum_corr= new TH1I("ha_T_mcpSum_corr"	,"Corrected singles ADC data for Top MCP-Sum: Pedestal subtracted"		,4*5000,-4*500,4*4500);
// Time-Of-Flight (tof)
h_tof			= new TH1I("h_tof",		"TOF in ns, All combos"		,TOFBins,TOFMin,TOFMax);
h_tof_LT		= new TH1I("h_tof_LT",	"TOF in ns, Left-Top"		,TOFBins,TOFMin,TOFMax);
h_tof_LR		= new TH1I("h_tof_LR",	"TOF in ns, Left-Right"		,TOFBins,TOFMin,TOFMax);
h_tof_BT		= new TH1I("h_tof_BT",	"TOF in ns, Bottom-Top"		,TOFBins,TOFMin,TOFMax);
h_tof_BR		= new TH1I("h_tof_BR",	"TOF in ns, Bottom-Right"	,TOFBins,TOFMin,TOFMax);
h_bkgd_tof		= new TH1I("h_bkgd_tof",	"(BACKGROUND) TOF in ns, All combos"	,TOFBins,TOFMin,TOFMax);
h_bkgd_tof_LT	= new TH1I("h_bkgd_tof_LT",	"(BACKGROUND) TOF in ns, Left-Top"		,TOFBins,TOFMin,TOFMax);
h_bkgd_tof_LR	= new TH1I("h_bkgd_tof_LR",	"(BACKGROUND) TOF in ns, Left-Right"	,TOFBins,TOFMin,TOFMax);
h_bkgd_tof_BT	= new TH1I("h_bkgd_tof_BT",	"(BACKGROUND) TOF in ns, Bottom-Top"	,TOFBins,TOFMin,TOFMax);
h_bkgd_tof_BR	= new TH1I("h_bkgd_tof_BR",	"(BACKGROUND) TOF in ns, Bottom-Right"	,TOFBins,TOFMin,TOFMax);
h_E_tof			= new TH1I("h_E_tof",		"TOF in ns using E as start, All combos"	,TOFBins,TOFMin,TOFMax);
h_E_tof_LT		= new TH1I("h_E_tof_LT",	"TOF in ns using E as start, Left-Top"		,TOFBins,TOFMin,TOFMax);
h_E_tof_LR		= new TH1I("h_E_tof_LR",	"TOF in ns using E as start, Left-Right"	,TOFBins,TOFMin,TOFMax);
h_E_tof_BT		= new TH1I("h_E_tof_BT",	"TOF in ns using E as start, Bottom-Top"	,TOFBins,TOFMin,TOFMax);
h_E_tof_BR		= new TH1I("h_E_tof_BR",	"TOF in ns using E as start, Bottom-Right"	,TOFBins,TOFMin,TOFMax);
h_bkgd_E_tof	= new TH1I("h_bkgd_E_tof",		"(BACKGROUND) TOF in ns, All combos"	,TOFBins,TOFMin,TOFMax);
h_bkgd_E_tof_LT	= new TH1I("h_bkgd_E_tof_LT",	"(BACKGROUND) TOF in ns, Left-Top"		,TOFBins,TOFMin,TOFMax);
h_bkgd_E_tof_LR	= new TH1I("h_bkgd_E_tof_LR",	"(BACKGROUND) TOF in ns, Left-Right"	,TOFBins,TOFMin,TOFMax);
h_bkgd_E_tof_BT	= new TH1I("h_bkgd_E_tof_BT",	"(BACKGROUND) TOF in ns, Bottom-Top"	,TOFBins,TOFMin,TOFMax);
h_bkgd_E_tof_BR	= new TH1I("h_bkgd_E_tof_BR",	"(BACKGROUND) TOF in ns, Bottom-Right"	,TOFBins,TOFMin,TOFMax);
h_ge_tof		= new TH1I("h_ge_tof",		"TOF in ns using HPGe as start, All combos"				,TOFBins,TOFMin,TOFMax);
h_ge_tof_RT		= new TH1I("h_ge_tof_RT",	"TOF in ns using HPGe as start, Right-Top(Ge-MCP)"		,TOFBins,TOFMin,TOFMax);
h_ge_tof_RR		= new TH1I("h_ge_tof_RR",	"TOF in ns using HPGe as start, Right-Right (Ge-MCP)"	,TOFBins,TOFMin,TOFMax);
h_ge_tof_TT		= new TH1I("h_ge_tof_TT",	"TOF in ns using HPGe as start, Top-Top (Ge-MCP)"		,TOFBins,TOFMin,TOFMax);
h_ge_tof_TR		= new TH1I("h_ge_tof_TR",	"TOF in ns using HPGe as start, Top-Right (Ge-MCP)"		,TOFBins,TOFMin,TOFMax);
h_dE_ge_tof		= new TH1I("h_dE_ge_tof",	"(Time of HPGe) minus (Time of Delta-E), All combos"	,TOFBins,TOFMin,TOFMax);
h_dE_ge_tof_LT	= new TH1I("h_dE_ge_tof_LT","(Time of HPGe) minus (Time of Delta-E), Left-Top"		,TOFBins,TOFMin,TOFMax);
h_dE_ge_tof_LR	= new TH1I("h_dE_ge_tof_LR","(Time of HPGe) minus (Time of Delta-E), Left-Right"	,TOFBins,TOFMin,TOFMax);
h_dE_ge_tof_BT	= new TH1I("h_dE_ge_tof_BT","(Time of HPGe) minus (Time of Delta-E), Bottom-Top"	,TOFBins,TOFMin,TOFMax);
h_dE_ge_tof_BR	= new TH1I("h_dE_ge_tof_BR","(Time of HPGe) minus (Time of Delta-E), Bottom-Right"	,TOFBins,TOFMin,TOFMax);
h_dE_E_tof		= new TH1I("h_dE_E_tof",	"(Time of E) minus (Time of Delta-E), All combos"		,TOFBins,TOFMin,TOFMax);
h_dE_E_tof_BB	= new TH1I("h_dE_E_tof_BB",	"(Time of E) minus (Time of Delta-E), Bottom minus Bottom",TOFBins,TOFMin,TOFMax);
h_dE_E_tof_BL	= new TH1I("h_dE_E_tof_BL",	"(Time of E) minus (Time of Delta-E), Left minus Bottom",TOFBins,TOFMin,TOFMax);
h_dE_E_tof_LB	= new TH1I("h_dE_E_tof_LB",	"(Time of E) minus (Time of Delta-E), Bottom minus Left",TOFBins,TOFMin,TOFMax);
h_dE_E_tof_LL	= new TH1I("h_dE_E_tof_LL",	"(Time of E) minus (Time of Delta-E), Left minus Left"	,TOFBins,TOFMin,TOFMax);
// Ion speed (v)
h_v				= new TH1I("h_v",			"Inverse ion speed in us/mm, All combos, Trap Full"		,vBins,vMin,vMax);
h_v_LT			= new TH1I("h_v_LT",		"Inverse ion speed in us/mm, Left-Top, Trap Full"		,vBins,vMin,vMax);
h_v_LR			= new TH1I("h_v_LR",		"Inverse ion speed in us/mm, Left-Right, Trap Full"		,vBins,vMin,vMax);
h_v_BT			= new TH1I("h_v_BT",		"Inverse ion speed in us/mm, Bottom-Top, Trap Full"		,vBins,vMin,vMax);
h_v_BR			= new TH1I("h_v_BR",		"Inverse ion speed in us/mm, Bottom-Right, Trap Full"	,vBins,vMin,vMax);
h_bkgd_v		= new TH1I("h_bkgd_v",		"Inverse ion speed in us/mm, All combos, Trap Empty"	,vBins,vMin,vMax);
h_bkgd_v_LT		= new TH1I("h_bkgd_v_LT",	"Inverse ion speed in us/mm, Left-Top, Trap Empty"		,vBins,vMin,vMax);
h_bkgd_v_LR		= new TH1I("h_bkgd_v_LR",	"Inverse ion speed in us/mm, Left-Right, Trap Empty"	,vBins,vMin,vMax);
h_bkgd_v_BT		= new TH1I("h_bkgd_v_BT",	"Inverse ion speed in us/mm, Bottom-Top, Trap Empty"	,vBins,vMin,vMax);
h_bkgd_v_BR		= new TH1I("h_bkgd_v_BR",	"Inverse ion speed in us/mm, Bottom-Right, Trap Empty"	,vBins,vMin,vMax);
// Inverse speed (vInv)
h_vInv			= new TH1I("h_vInv",	"Inverse ion speed in us/mm, All combos, Trap Full"		,vInvBins,vInvMin,vInvMax);
h_vInv_LT		= new TH1I("h_vInv_LT",	"Inverse ion speed in us/mm, Left-Top, Trap Full"		,vInvBins,vInvMin,vInvMax);
h_vInv_LR		= new TH1I("h_vInv_LR",	"Inverse ion speed in us/mm, Left-Right, Trap Full"		,vInvBins,vInvMin,vInvMax);
h_vInv_BT		= new TH1I("h_vInv_BT",	"Inverse ion speed in us/mm, Bottom-Top, Trap Full"		,vInvBins,vInvMin,vInvMax);
h_vInv_BR		= new TH1I("h_vInv_BR",	"Inverse ion speed in us/mm, Bottom-Right, Trap Full"	,vInvBins,vInvMin,vInvMax);
h_bkgd_vInv		= new TH1I("h_bkgd_vInv",		"Inverse ion speed in us/mm, All combos, Trap Empty"	,vInvBins,vInvMin,vInvMax);
h_bkgd_vInv_LT	= new TH1I("h_bkgd_vInv_LT",	"Inverse ion speed in us/mm, Left-Top, Trap Empty"		,vInvBins,vInvMin,vInvMax);
h_bkgd_vInv_LR	= new TH1I("h_bkgd_vInv_LR",	"Inverse ion speed in us/mm, Left-Right, Trap Empty"	,vInvBins,vInvMin,vInvMax);
h_bkgd_vInv_BT	= new TH1I("h_bkgd_vInv_BT",	"Inverse ion speed in us/mm, Bottom-Top, Trap Empty"	,vInvBins,vInvMin,vInvMax);
h_bkgd_vInv_BR	= new TH1I("h_bkgd_vInv_BR",	"Inverse ion speed in us/mm, Bottom-Right, Trap Empty"	,vInvBins,vInvMin,vInvMax);
// Neutron energy (En)
h_En			= new TH1I("h_En",		"Neutron energy in keV, All combos, Trap Full"		,EnBins,EnMin,EnMax);
h_En_LT			= new TH1I("h_En_LT",	"Neutron energy in keV, Left-Top, Trap Full"		,EnBins,EnMin,EnMax);
h_En_LR			= new TH1I("h_En_LR",	"Neutron energy in keV, Left-Right, Trap Full"		,EnBins,EnMin,EnMax);
h_En_BT			= new TH1I("h_En_BT",	"Neutron energy in keV, Bottom-Top, Trap Full"		,EnBins,EnMin,EnMax);
h_En_BR			= new TH1I("h_En_BR",	"Neutron energy in keV, Bottom-Right, Trap Full"	,EnBins,EnMin,EnMax);
h_bkgd_En		= new TH1I("h_bkgd_En",		"Neutron energy in keV, All combos, Trap Empty"		,EnBins,EnMin,EnMax);
h_bkgd_En_LT	= new TH1I("h_bkgd_En_LT",	"Neutron energy in keV, Left-Top, Trap Empty"		,EnBins,EnMin,EnMax);
h_bkgd_En_LR	= new TH1I("h_bkgd_En_LR",	"Neutron energy in keV, Left-Right, Trap Empty"		,EnBins,EnMin,EnMax);
h_bkgd_En_BT	= new TH1I("h_bkgd_En_BT",	"Neutron energy in keV, Bottom-Top, Trap Empty"		,EnBins,EnMin,EnMax);
h_bkgd_En_BR	= new TH1I("h_bkgd_En_BR",	"Neutron energy in keV, Bottom-Right, Trap Empty"	,EnBins,EnMin,EnMax);
// MCP maps
h_R_mcpX		= new TH1I("h_R_mcpX"	,"Singles ADC data for Right MCP-X (Sum>100)"	, mapBins, mapMin, mapMax);
h_R_mcpY		= new TH1I("h_R_mcpY"	,"Singles ADC data for Right MCP-Y (Sum>100)"	, mapBins, mapMin, mapMax);
h_T_mcpX		= new TH1I("h_T_mcpX"	,"Singles ADC data for Top MCP-X (Sum>100)"	, mapBins, mapMin, mapMax);
h_T_mcpY		= new TH1I("h_T_mcpY"	,"Singles ADC data for Top MCP-Y (Sum>100)"	, mapBins, mapMin, mapMax);
h_T_mcpMap				= new TH2I("h_T_mcpMap"		,"Top MCP map with official cut (Sum>200), Trap full"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_R_mcpMap				= new TH2I("h_R_mcpMap"		,"Right MCP map with official cut (Sum>200), Trap full"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_T_mcpMapPhys			= new TH2I("h_T_mcpMapPhys"		,"Top MCP physical map with official cut (Sum>200), Trap full"		,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_R_mcpMapPhys			= new TH2I("h_R_mcpMapPhys"		,"Right MCP physical map with official cut (Sum>200), Trap full"	,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_T_mcpMapPhysFidArea	= new TH2I("h_T_mcpMapPhysFidArea"	,"Top MCP physical map with official cut (Sum>200), Fiducial Area only, Trap full"		,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_R_mcpMapPhysFidArea	= new TH2I("h_R_mcpMapPhysFidArea"	,"Right MCP physical map with official cut (Sum>200), Fiducial Area only, Trap full"	,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_T_mcpMapPhys_3post	= new TH2I("h_T_mcpMapPhys_3post"	,"Top MCP physical map of 3-post events with official cut (Sum>200), Trap full"		,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_R_mcpMapPhys_3post	= new TH2I("h_R_mcpMapPhys_3post"	,"Right MCP physical map of 3-post events with official cut (Sum>200), Trap full"	,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_T_mcpMapPhysFidArea_3post	= new TH2I("h_T_mcpMapPhysFidArea_3post"	,"Top MCP physical map of 3-post events with official cut (Sum>200), Fiducial Area only, Trap full"		,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_R_mcpMapPhysFidArea_3post	= new TH2I("h_R_mcpMapPhysFidArea_3post"	,"Right MCP physical map of 3-post events with official cut (Sum>200), Fiducial Area only, Trap full"	,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_T_mcpMap_all			= new TH2I("h_T_mcpMap_all"	,"Top MCP map, all hits"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_R_mcpMap_all			= new TH2I("h_R_mcpMap_all"	,"Right MCP map, all hits"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_T_mcpMap_post50		= new TH2I("h_T_mcpMap_post50"	,"Top MCP map w/ sum > 50"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_R_mcpMap_post50		= new TH2I("h_R_mcpMap_post50"	,"Right MCP map w/ sum > 50"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_T_mcpMap_post100		= new TH2I("h_T_mcpMap_post100"	,"Top MCP map w/ sum > 100"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_R_mcpMap_post100		= new TH2I("h_R_mcpMap_post100"	,"Right MCP map w/ sum > 100"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_T_mcpMap_post200		= new TH2I("h_T_mcpMap_post200"	,"Top MCP map w/ sum > 200"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_R_mcpMap_post200		= new TH2I("h_R_mcpMap_post200"	,"Right MCP map w/ sum > 200"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_T_mcpMap_post250		= new TH2I("h_T_mcpMap_post250"	,"Top MCP map w/ sum > 250"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_R_mcpMap_post250		= new TH2I("h_R_mcpMap_post250"	,"Right MCP map w/ sum > 250"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_T_mcpMap			= new TH2I("h_bkgd_T_mcpMap"	,"Top MCP map with official cut (Sum>200), Trap empty"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_bkgd_R_mcpMap			= new TH2I("h_bkgd_R_mcpMap"	,"Right MCP map with official cut (Sum>200), Trap empty"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_bkgd_T_mcpMapPhys		= new TH2I("h_bkgd_T_mcpMapPhys"		,"Top MCP physical map with official cut (Sum>200), Trap empty"		,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_bkgd_R_mcpMapPhys		= new TH2I("h_bkgd_R_mcpMapPhys"		,"Right MCP physical map with official cut (Sum>200), Trap empty"		,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_bkgd_T_mcpMapPhys_3post	= new TH2I("h_bkgd_T_mcpMapPhys_3post"	,"Top MCP physical map of 3-post events with official cut (Sum>200), Trap empty"	,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_bkgd_R_mcpMapPhys_3post	= new TH2I("h_bkgd_R_mcpMapPhys_3post"	,"Right MCP physical map of 3-post events with official cut (Sum>200), Trap empty"	,mapBins,25*mapMin,25*mapMax,mapBins,25*mapMin,25*mapMax);
h_bkgd_T_mcpMap_all		= new TH2I("h_bkgd_T_mcpMap_all"	,"(BACKGROUND) Top MCP map, all hits"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_R_mcpMap_all		= new TH2I("h_bkgd_R_mcpMap_all"	,"(BACKGROUND) Right MCP map, all hits"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_T_mcpMap_post50	= new TH2I("h_bkgd_T_mcpMap_post50"	,"(BACKGROUND) Top MCP map w/ sum > 50"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_R_mcpMap_post50	= new TH2I("h_bkgd_R_mcpMap_post50"	,"(BACKGROUND) Right MCP map w/ sum > 50"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_T_mcpMap_post100	= new TH2I("h_bkgd_T_mcpMap_post100","(BACKGROUND) Top MCP map w/ sum > 100"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_R_mcpMap_post100	= new TH2I("h_bkgd_R_mcpMap_post100","(BACKGROUND) Right MCP map w/ sum > 100"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_T_mcpMap_post200	= new TH2I("h_bkgd_T_mcpMap_post200","(BACKGROUND) Top MCP map w/ sum > 200"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_R_mcpMap_post200	= new TH2I("h_bkgd_R_mcpMap_post200","(BACKGROUND) Right MCP map w/ sum > 200"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_T_mcpMap_post250	= new TH2I("h_bkgd_T_mcpMap_post250","(BACKGROUND) Top MCP map w/ sum > 250"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_bkgd_R_mcpMap_post250	= new TH2I("h_bkgd_R_mcpMap_post250","(BACKGROUND) Right MCP map w/ sum > 250"	, mapBins, mapMin, mapMax, mapBins, mapMin, mapMax);
h_T_zero_mcpMap			= new TH2I("h_T_zero_mcpMap"		,"MCP map for Bottom-Top & Left-Top Zero-Time Events"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_R_zero_mcpMap			= new TH2I("h_R_zero_mcpMap"		,"MCP map for Bottom-Right & Left-Right Zero-Time Events"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_T_lowTOF_mcpMap			= new TH2I("h_T_lowTOF_mcpMap"		,"MCP map for Bottom-Top & Left-Top \"Low-TOF\" Events"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_R_lowTOF_mcpMap			= new TH2I("h_R_lowTOF_mcpMap"		,"MCP map for Bottom-Right & Left-Right \"Low-TOF\" Events"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_T_fast_mcpMap			= new TH2I("h_T_fast_mcpMap"		,"MCP map for Bottom-Top & Left-Top Fast Recoils"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_R_fast_mcpMap			= new TH2I("h_R_fast_mcpMap"		,"MCP map for Bottom-Right & Left-Right Fast Recoils"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_T_slow_mcpMap			= new TH2I("h_T_slow_mcpMap"		,"MCP map for Bottom-Top & Left-Top Slow Recoils"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_R_slow_mcpMap			= new TH2I("h_R_slow_mcpMap"		,"MCP map for Bottom-Right & Left-Right Slow Recoils"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_T_oops_mcpMap			= new TH2I("h_T_oops_mcpMap"		,"MCP map for Bottom-Top & Left-Top TOF Accidentals"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_R_oops_mcpMap			= new TH2I("h_R_oops_mcpMap"		,"MCP map for Bottom-Right & Left-Right TOF Accidentals"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LT_zero_mcpMap			= new TH2I("h_LT_zero_mcpMap"		,"MCP map for Left-Top Zero-Time Events"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LR_zero_mcpMap			= new TH2I("h_LR_zero_mcpMap"		,"MCP map for Left-Right Zero-Time Events"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BT_zero_mcpMap			= new TH2I("h_BT_zero_mcpMap"		,"MCP map for Bottom-Top Zero-Time Events"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BR_zero_mcpMap			= new TH2I("h_BR_zero_mcpMap"		,"MCP map for Bottom-Right Zero-Time Events"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LT_lowTOF_mcpMap		= new TH2I("h_LT_lowTOF_mcpMap"		,"MCP map for Left-Top \"Low-TOF\" Events"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LR_lowTOF_mcpMap		= new TH2I("h_LR_lowTOF_mcpMap"		,"MCP map for Left-Right \"Low-TOF\" Events"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BT_lowTOF_mcpMap		= new TH2I("h_BT_lowTOF_mcpMap"		,"MCP map for Bottom-Top \"Low-TOF\" Events"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BR_lowTOF_mcpMap		= new TH2I("h_BR_lowTOF_mcpMap"		,"MCP map for Bottom-Right \"Low-TOF\" Events"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LT_fast_mcpMap			= new TH2I("h_LT_fast_mcpMap"		,"MCP map for Left-Top Fast Recoils"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LR_fast_mcpMap			= new TH2I("h_LR_fast_mcpMap"		,"MCP map for Left-Right Fast Recoils"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BT_fast_mcpMap			= new TH2I("h_BT_fast_mcpMap"		,"MCP map for Bottom-Top Fast Recoils"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BR_fast_mcpMap			= new TH2I("h_BR_fast_mcpMap"		,"MCP map for Bottom-Right Fast Recoils"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LT_slow_mcpMap			= new TH2I("h_LT_slow_mcpMap"		,"MCP map for Left-Top Slow Recoils"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LR_slow_mcpMap			= new TH2I("h_LR_slow_mcpMap"		,"MCP map for Left-Right Slow Recoils"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BT_slow_mcpMap			= new TH2I("h_BT_slow_mcpMap"		,"MCP map for Bottom-Top Slow Recoils"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BR_slow_mcpMap			= new TH2I("h_BR_slow_mcpMap"		,"MCP map for Bottom-Right Slow Recoils"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LT_oops_mcpMap			= new TH2I("h_LT_oops_mcpMap"		,"MCP map for Left-Top TOF Accidentals"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_LR_oops_mcpMap			= new TH2I("h_LR_oops_mcpMap"		,"MCP map for Left-Right TOF Accidentals"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BT_oops_mcpMap			= new TH2I("h_BT_oops_mcpMap"		,"MCP map for Bottom-Top TOF Accidentals"		,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
h_BR_oops_mcpMap			= new TH2I("h_BR_oops_mcpMap"		,"MCP map for Bottom-Right TOF Accidentals"	,mapBins,mapMin,mapMax,mapBins,mapMin,mapMax);
// Events vs Cycle Time
// Declared as TH1D so that they can be multiplied by a TH1D containing per-bin deadtime corrections
h_state_vs_cycle_time				= new TH2I("h_state_vs_cycle_time","Capt state versus Cycle Time (ms)",tCycBins,tCycMin,tCycMax,2,-0.5,1.5);
h_all_vs_cycle_time_observed		= new TH1D("h_all_vs_cycle_time_observed","All Triggers vs Cycle Time (ms)",tCycBins,tCycMin,tCycMax);
h_betas_vs_cycle_time_observed		= new TH1D("h_betas_vs_cycle_time_observed","Beta singles versus cycle time (ms), Both detectors (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_L_betas_vs_cycle_time_observed	= new TH1D("h_L_betas_vs_cycle_time_observed","Beta singles versus cycle time (ms), Left detector (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_B_betas_vs_cycle_time_observed	= new TH1D("h_B_betas_vs_cycle_time_observed","Beta singles versus cycle time (ms), Bottom detector (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_T_zero_vs_cycle_time_observed		= new TH1D("h_T_zero_vs_cycle_time_observed","dE - Top MCP Zero-time events vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_R_zero_vs_cycle_time_observed		= new TH1D("h_R_zero_vs_cycle_time_observed","dE - Right MCP Zero-time events vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_zero_vs_cycle_time_observed		= new TH1D("h_zero_vs_cycle_time_observed","All dE-MCP Zero-time events versus Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_T_lowTOF_vs_cycle_time_observed	= new TH1D("h_T_lowTOF_vs_cycle_time_observed","dE - Top MCP \"Low-TOF\" events vs Cycle Time (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_R_lowTOF_vs_cycle_time_observed	= new TH1D("h_R_lowTOF_vs_cycle_time_observed","dE - Right MCP \"Low-TOF\" events vs Cycle Time (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_lowTOF_vs_cycle_time_observed		= new TH1D("h_lowTOF_vs_cycle_time_observed","All dE-MCP \"Low-TOF\" versus Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_T_fast_vs_cycle_time_observed		= new TH1D("h_T_fast_vs_cycle_time_observed","Top MCP Fast Recoils vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_R_fast_vs_cycle_time_observed		= new TH1D("h_R_fast_vs_cycle_time_observed","Right MCP Fast Recoils vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_fast_vs_cycle_time_observed		= new TH1D("h_fast_vs_cycle_time_observed","All Fast Recoils vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_T_slow_vs_cycle_time_observed		= new TH1D("h_T_slow_vs_cycle_time_observed","Top MCP Slow Recoils vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_R_slow_vs_cycle_time_observed		= new TH1D("h_R_slow_vs_cycle_time_observed","Right MCP Slow Recoils vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_slow_vs_cycle_time_observed		= new TH1D("h_slow_vs_cycle_time_observed","All Slow Recoils vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_T_oops_vs_cycle_time_observed		= new TH1D("h_T_oops_vs_cycle_time_observed","dE - Top MCP Accidentals vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_R_oops_vs_cycle_time_observed		= new TH1D("h_R_oops_vs_cycle_time_observed","dE - Right MCP Accidentals vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
h_oops_vs_cycle_time_observed		= new TH1D("h_oops_vs_cycle_time_observed","All dE-MCP Accidentals vs Cycle Time (ms) (not corrected for deadtime)",tCycBins,tCycMin,tCycMax);
// Beta-Gamma, ADC
ha_bg_LT		= new TH1I("ha_bg_LT","ADC: (ALL DATA) Top HPGe w/ Left dE coincident"				,aBins,aMin,aMax);
ha_bg_LR		= new TH1I("ha_bg_LR","ADC: (ALL DATA) Right HPGe w/ Left dE coincident"			,aBins,aMin,aMax);
ha_bg_BT		= new TH1I("ha_bg_BT","ADC: (ALL DATA) Top HPGe w/ Bottom dE coincident"			,aBins,aMin,aMax);
ha_bg_BR		= new TH1I("ha_bg_BR","ADC: (ALL DATA) Right HPGe w/ Bottom dE Ge coincident"		,aBins,aMin,aMax);
ha_sgnl_bg_LT	= new TH1I("ha_sgnl_bg_LT","ADC: (TRAPPING) Top HPGe w/ Left dE coincident"			,aBins,aMin,aMax);
ha_sgnl_bg_LR	= new TH1I("ha_sgnl_bg_LR","ADC: (TRAPPING) Right HPGe w/ Left dE coincident"		,aBins,aMin,aMax);
ha_sgnl_bg_BT	= new TH1I("ha_sgnl_bg_BT","ADC: (TRAPPING) Top HPGe w/ Bottom dE coincident"		,aBins,aMin,aMax);
ha_sgnl_bg_BR	= new TH1I("ha_sgnl_bg_BR","ADC: (TRAPPING) Right HPGe w/ Bottom dE Ge coincident"	,aBins,aMin,aMax);
ha_bkgd_bg_LT	= new TH1I("ha_bkgd_bg_LT","ADC: (BACKGROUND) Top HPGe w/ Left dE coincident"		,aBins,aMin,aMax);
ha_bkgd_bg_LR	= new TH1I("ha_bkgd_bg_LR","ADC: (BACKGROUND) Right HPGe w/ Left dE coincident"		,aBins,aMin,aMax);
ha_bkgd_bg_BT	= new TH1I("ha_bkgd_bg_BT","ADC: (BACKGROUND) Top HPGe w/ Bottom dE coincident"		,aBins,aMin,aMax);
ha_bkgd_bg_BR	= new TH1I("ha_bkgd_bg_BR","ADC: (BACKGROUND) Right HPGe w/ Bottom dE Ge coincident",aBins,aMin,aMax);
// Beta-Gamma, keV (calibrated)
he_bg_LT		= new TH1I("he_bg_LT",	"bg_LT: (ALL DATA) Top HPGe energy w/ Left dE coincident (keV)"			,eBins,eMin,eMax);
he_bg_LR		= new TH1I("he_bg_LR",	"bg_LR: (ALL DATA) Right HPGe energy w/ Left dE coincident (keV)"		,eBins,eMin,eMax);
he_bg_BT		= new TH1I("he_bg_BT",	"bg_BT: (ALL DATA) Top HPGe energy w/ Bottom dE coincident (keV)"		,eBins,eMin,eMax);
he_bg_BR		= new TH1I("he_bg_BR",	"bg_BR: (ALL DATA) Right HPGe energy w/ Bottom dE coincident (keV)"		,eBins,eMin,eMax);
he_bg			= new TH1I("he_bg",		"bg: (ALL DATA) All HPGe energies w/ any dE coincident (keV)"			,eBins,eMin,eMax);
he_sgnl_bg_LT	= new TH1I("he_sgnl_bg_LT",	"bg_LT: (TRAPPING) Top HPGe energy w/ Left dE coincident (keV)"		,eBins,eMin,eMax);
he_sgnl_bg_LR	= new TH1I("he_sgnl_bg_LR",	"bg_LR: (TRAPPING) Right HPGe energy w/ Left dE coincident (keV)"	,eBins,eMin,eMax);
he_sgnl_bg_BT	= new TH1I("he_sgnl_bg_BT",	"bg_BT: (TRAPPING) Top HPGe energy w/ Bottom dE coincident (keV)"	,eBins,eMin,eMax);
he_sgnl_bg_BR	= new TH1I("he_sgnl_bg_BR",	"bg_BR: (TRAPPING) Right HPGe energy w/ Bottom dE coincident (keV)"	,eBins,eMin,eMax);
he_sgnl_bg		= new TH1I("he_sgnl_bg",	"bg: (TRAPPING) All HPGe energies w/ any dE coincident (keV)"		,eBins,eMin,eMax);
he_bkgd_bg_LT	= new TH1I("he_bkgd_bg_LT",	"bg_LT: (BACKGROUND) Top HPGe energy w/ Left dE coincident (keV)"	,eBins,eMin,eMax);
he_bkgd_bg_LR	= new TH1I("he_bkgd_bg_LR",	"bg_LR: (BACKGROUND) Right HPGe energy w/ Left dE coincident (keV)"	,eBins,eMin,eMax);
he_bkgd_bg_BT	= new TH1I("he_bkgd_bg_BT",	"bg_BT: (BACKGROUND) Top HPGe energy w/ Bottom dE coincident (keV)"	,eBins,eMin,eMax);
he_bkgd_bg_BR	= new TH1I("he_bkgd_bg_BR",	"bg_BR: (BACKGROUND) Right HPGe energy w/ Bottom dE coincident (keV)",eBins,eMin,eMax);
he_bkgd_bg		= new TH1I("he_bkgd_bg",	"bg: (BACKGROUND) All HPGe energies w/ any dE coincident (keV)"		,eBins,eMin,eMax);
// Gamma singles, ADC
//ha_R_ge		= new TH1I("ha_R_ge"		,"Singles ADC data for Right HPGe"			,aBins,aMin,aMax); // Declarations from above
//ha_T_ge		= new TH1I("ha_T_ge"		,"Singles ADC data for Top HPGe"			,aBins,aMin,aMax); // Declarations from above
ha_sgnl_R_ge	= new TH1I("ha_sgnl_R_ge","(TRAPPING) Singles ADC data for Right Ge"	,aBins,aMin,aMax);
ha_sgnl_T_ge	= new TH1I("ha_sgnl_T_ge","(TRAPPING) Singles ADC data for Top Ge"		,aBins,aMin,aMax);
ha_bkgd_R_ge	= new TH1I("ha_bkgd_R_ge","(BACKGROUND) Singles ADC data for Right Ge"	,aBins,aMin,aMax);
ha_bkgd_T_ge	= new TH1I("ha_bkgd_T_ge","(BACKGROUND) Singles ADC data for Top Ge"	,aBins,aMin,aMax);
// Gamma singles, keV (calibrated)
he_R_ge			= new TH1I("he_R_ge",	"(ALL DATA) Right Ge singles in keV"						,eBins,eMin,eMax);
he_T_ge			= new TH1I("he_T_ge",	"(ALL DATA) Top Ge singles in keV"							,eBins,eMin,eMax);
he_ge			= new TH1I("he_ge",		"(ALL DATA) All Ge singles in keV"							,eBins,eMin,eMax);
he_sgnl_R_ge	= new TH1I("he_sgnl_R_ge",	"(TRAPPING) Right Ge singles in keV"					,eBins,eMin,eMax);
he_sgnl_T_ge	= new TH1I("he_sgnl_T_ge",	"(TRAPPING) Top Ge singles in keV"						,eBins,eMin,eMax);
he_sgnl_ge		= new TH1I("he_sgnl_ge",	"(TRAPPING) All Ge singles in keV"						,eBins,eMin,eMax);
he_bkgd_R_ge	= new TH1I("he_bkgd_R_ge",	"(BACKGROUND) Right Ge singles in keV"					,eBins,eMin,eMax);
he_bkgd_T_ge	= new TH1I("he_bkgd_T_ge",	"(BACKGROUND) Top Ge singles in keV"					,eBins,eMin,eMax);
he_bkgd_ge		= new TH1I("he_bkgd_ge",	"(BACKGROUND) All Ge singles in keV"					,eBins,eMin,eMax);
	//TH1I *he_R_ge_highE	= new TH1I("he_R_ge_highE","(ALL DATA) Right Ge singles in keV, Low-gain signal",eBins,eMin,eMax);
	//TH1I *he_T_ge_highE	= new TH1I("he_T_ge_highE","(ALL DATA) Top Ge singles in keV, Low-gain signal"	,eBins,eMin,eMax);
	//TH1I *he_ge_highE	= new TH1I("he_ge_highE","(ALL DATA) All Ge singles in keV, Low-gain signal"		,eBins,eMin,eMax);
// Events vs RF phase
//ht_rf_phase_observed 				= new TH1D("ht_rf_phase_observed",					"All events vs (RF phase / 2 pi), Trap Full, All combos", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_all_vs_rf_phase_observed 			= new TH1D("h_all_vs_rf_phase_observed",			"All events vs (RF phase / 2 pi), Trap Full, All combos, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_slow_vs_rf_phase_observed 		= new TH1D("h_slow_vs_rf_phase_observed",			"Slow recoils vs (RF phase / 2 pi), Trap Full, All combos, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_LT_slow_vs_rf_phase_observed 		= new TH1D("h_LT_slow_vs_rf_phase_observed",		"Slow recoils vs (RF phase / 2 pi), Trap Full, Left-Top, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_LR_slow_vs_rf_phase_observed		= new TH1D("h_LR_slow_vs_rf_phase_observed",		"Slow recoils vs (RF phase / 2 pi), Trap Full, Left-Right, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_BT_slow_vs_rf_phase_observed		= new TH1D("h_BT_slow_vs_rf_phase_observed",		"Slow recoils vs (RF phase / 2 pi), Trap Full, Bottom-Top, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_BR_slow_vs_rf_phase_observed		= new TH1D("h_BR_slow_vs_rf_phase_observed",		"Slow recoils vs (RF phase / 2 pi), Trap Full, Bottom-Right, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_oops_vs_rf_phase_observed 		= new TH1D("h_oops_vs_rf_phase_observed",			"dE-MCP accidentals vs (RF phase / 2 pi), Trap Full, All combos, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_LT_oops_vs_rf_phase_observed 		= new TH1D("h_LT_oops_vs_rf_phase_observed",		"dE-MCP TOF accidentals vs (RF phase / 2 pi), Trap Full, Left-Top, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_LR_oops_vs_rf_phase_observed		= new TH1D("h_LR_oops_vs_rf_phase_observed",		"dE-MCP TOF accidentals vs (RF phase / 2 pi), Trap Full, Left-Right, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_BT_oops_vs_rf_phase_observed		= new TH1D("h_BT_oops_vs_rf_phase_observed",		"dE-MCP TOF accidentals vs (RF phase / 2 pi), Trap Full, Bottom-Top, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_BR_oops_vs_rf_phase_observed		= new TH1D("h_BR_oops_vs_rf_phase_observed",		"dE-MCP TOF accidentals vs (RF phase / 2 pi), Trap Full, Bottom-Right, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_bkgd_slow_vs_rf_phase_observed 	= new TH1D("h_bkgd_slow_vs_rf_phase_observed",		"Slow recoils vs (RF phase / 2 pi), Trap Empty, All combos, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_bkgd_LT_slow_vs_rf_phase_observed	= new TH1D("h_bkgd_LT_slow_vs_rf_phase_observed",	"Slow recoils vs (RF phase / 2 pi), Trap Empty, Left-Top, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_bkgd_LR_slow_vs_rf_phase_observed	= new TH1D("h_bkgd_LR_slow_vs_rf_phase_observed",	"Slow recoils vs (RF phase / 2 pi), Trap Empty, Left-Right, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_bkgd_BT_slow_vs_rf_phase_observed	= new TH1D("h_bkgd_BT_slow_vs_rf_phase_observed",	"Slow recoils vs (RF phase / 2 pi), Trap Empty, Bottom-Top, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
h_bkgd_BR_slow_vs_rf_phase_observed	= new TH1D("h_bkgd_BR_slow_vs_rf_phase_observed",	"Slow recoils vs (RF phase / 2 pi), Trap Empty, Bottom-Right, Not corrected for deadtime", rfPhaseBins, rfPhaseMin, rfPhaseMax);
// Special diagnostics for dE-MCP instantaneous coinc peak
ht_B_dE_zero_time_singles	= new TH1I("ht_B_dE_zero_time_singles","TDC: Bottom (dEa+dEb)/2 when tof is in zero-time peak (ns)"	,2*tBins,tMin,tMax);
ht_B_dEa_zero_time_singles	= new TH1I("ht_B_dEa_zero_time_singles","TDC: Bottom dEa when tof is in zero-time peak (ns)"	,tBins,tMin,tMax);
ht_B_dEb_zero_time_singles	= new TH1I("ht_B_dEb_zero_time_singles","TDC: Bottom dEb when tof is in zero-time peak (ns)"	,tBins,tMin,tMax);
ht_T_mcp_zero_time_singles	= new TH1I("ht_T_mcp_zero_time_singles","TDC: Top mcp when tof is in zero-time peak (ns)"	,tBins,tMin,tMax);
h_bkgd_tof_dEmin			= new TH1I("h_bkgd_tof_dEmin",	"(BACKGROUND) TOF in ns using min(dEa,dEb), All combos"	,TOFBins,TOFMin,TOFMax);

}
